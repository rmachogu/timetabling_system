type ChangeUserRolePayload = record { role : UserRole; user_id : nat64 };
type Classroom = record {
  id : nat64;
  equipment : text;
  name : text;
  capacity : nat32;
};
type ClassroomPayload = record {
  equipment : text;
  name : text;
  capacity : nat32;
};
type Course = record {
  id : nat64;
  prerequisites : vec nat64;
  duration_years : nat32;
  name : text;
  required_equipment : text;
};
type CoursePayload = record {
  prerequisites : vec nat64;
  duration_years : nat32;
  name : text;
  required_equipment : text;
};
type Instructor = record {
  id : nat64;
  name : text;
  availability : vec text;
  preferred_times : vec text;
};
type InstructorPayload = record {
  name : text;
  availability : vec text;
  preferred_times : vec text;
};
type Result = variant { Ok : User; Err : text };
type Result_1 = variant { Ok : vec Timetable; Err : text };
type Result_10 = variant { Ok : vec User; Err : text };
type Result_2 = variant { Ok : Classroom; Err : text };
type Result_3 = variant { Ok : Course; Err : text };
type Result_4 = variant { Ok : Instructor; Err : text };
type Result_5 = variant { Ok : Timetable; Err : text };
type Result_6 = variant { Ok : text; Err : text };
type Result_7 = variant { Ok : vec Classroom; Err : text };
type Result_8 = variant { Ok : vec Course; Err : text };
type Result_9 = variant { Ok : vec Instructor; Err : text };
type Timetable = record {
  id : nat64;
  time_slot : text;
  classroom_id : nat64;
  course_id : nat64;
  instructor_id : nat64;
};
type TimetablePayload = record {
  time_slot : text;
  classroom_id : nat64;
  course_id : nat64;
  instructor_id : nat64;
};
type User = record {
  id : nat64;
  username : text;
  password : text;
  role : UserRole;
  created_at : nat64;
  email : text;
};
type UserPayload = record {
  username : text;
  password : text;
  role : UserRole;
  email : text;
};
type UserRole = variant { Instructor; Student; Admin };
service : {
  change_user_role : (ChangeUserRolePayload) -> (Result);
  create_auto_timetable : () -> (Result_1);
  create_classroom : (ClassroomPayload) -> (Result_2);
  create_course : (CoursePayload) -> (Result_3);
  create_instructor : (InstructorPayload) -> (Result_4);
  create_timetable : (TimetablePayload) -> (Result_5);
  create_user : (UserPayload) -> (Result);
  delete_user : (nat64) -> (Result_6);
  get_classrooms : () -> (Result_7) query;
  get_courses : () -> (Result_8) query;
  get_instructors : () -> (Result_9) query;
  get_timetables : () -> (Result_1) query;
  get_users : () -> (Result_10) query;
  update_user : (nat64, UserPayload) -> (Result);
}
